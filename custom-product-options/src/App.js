import { useState } from "react";
import { v4 as uuidv4 } from "uuid";

export default function App() {
  const [options, setOptions] = useState([]); // Options object

  const id = uuidv4(); // Assigning the id variable with a value of a unique id generated by uuidv4
  const addOption = () => {
    const newOption = {
      id,
    };
    setOptions([...options, newOption]);
  };

  return (
    <div className="container">
      <div className="options-config-col">
        <div>
          <OptionList options={options} />
        </div>
        <button className="btn btn-add-options" onClick={addOption}>
          Add options
        </button>
      </div>
      <div className="options-preview-col">
        <h3>Preview</h3>
      </div>
    </div>
  );
}

function OptionList({ options }) {
  const [curOpen, setIsOpen] = useState(null);

  return (
    <div div className="options-accordion">
      {options.map((option, optionNum) => (
        <Option
          optionName={option.optionName}
          curOpen={curOpen}
          setIsOpen={setIsOpen}
          optionNum={optionNum}
          key={option.id}
        />
      ))}
    </div>
  );
}

function Option({ optionNum, curOpen, setIsOpen }) {
  const [title, setTitle] = useState(`option_${optionNum + 1}`);
  const isOpen = optionNum === curOpen;

  function handleIsOpen(num) {
    setIsOpen(isOpen ? null : num);
    console.log(`The number of the current open option is ${num}`);
    console.log(`The value of curOpen: ${curOpen}`);
  }

  // State to manage active tab for this option
  const [activeTab, setActiveTab] = useState("config");

  // Function to handle tab change for this option
  const handleTabChange = (tabName) => {
    setActiveTab(tabName);
  };

  return (
    <>
      <div
        className={`item ${isOpen ? "open" : "close"}`}
        onClick={() => handleIsOpen(optionNum)}
      >
        <p className="number">{optionNum + 1}</p>
        <p className="title">{`${title}`}</p>
        <p className="icon">{isOpen ? "-" : "+"}</p>
      </div>
      <div>
        {isOpen && (
          <div className="content-box">
            <Tabs
              activeTab={activeTab}
              onTabChange={handleTabChange}
              title={title}
              setTitle={setTitle}
            />
          </div>
        )}
      </div>
    </>
  );
}

function Tabs({ activeTab, onTabChange, title, setTitle }) {
  return (
    <div className="tabs-container">
      <div className="tabs">
        <div
          className={`tab-title ${activeTab === "config" ? "active" : ""}`}
          onClick={() => onTabChange("config")}
        >
          Config
          <div className="active-tab" />
        </div>
        <div
          className={`tab-title ${activeTab === "advanced" ? "active" : ""}`}
          onClick={() => onTabChange("advanced")}
        >
          Advanced
          <div className="active-tab" />
        </div>
      </div>
      <div className="active-tab-form">
        {activeTab === "config" && (
          <ConfigTab title={title} setTitle={setTitle} />
        )}
        {activeTab === "advanced" && <AdvancedTab />}
      </div>
    </div>
  );
}

function ConfigTab({ title, setTitle }) {
  return (
    <div className="option-config">
      <div className="tab-config">
        <div className="input-row">
          <label>Name</label>
          <input
            type="text"
            name="name"
            // placeholder={title}
            value={title}
            onChange={(e) => setTitle(e.target.value)}
          />
          <span className="helper">
            Name of the form field where the option is stored (required)
          </span>
        </div>
        <div className="input-row">
          <label htmlFor="label">Label</label>
          <input type="text" id="label" name="label" />
          <span className="helper">Label above the form field (optional)</span>
        </div>
      </div>
      <div className="required">
        <input type="checkbox" id="isRequired" />
        <label htmlFor="isRequiredName">Required</label>
      </div>
      <div className="opt-config-value">
        <label name="value">Value</label>
        <input type="text" name="value" />
        <span className="helper">Initial value of the option</span>
      </div>
    </div>
  );
}

function AdvancedTab() {
  return <h3>Advanced Form</h3>;
}
